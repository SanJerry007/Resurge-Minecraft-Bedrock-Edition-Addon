{
	"format_version": "1.18.20",
	"minecraft:entity": {
		"description": {
			"identifier": "resurge:skeleton_raged",
			"is_spawnable": true,
			"is_summonable": true,
			"is_experimental": false,
			"runtime_identifier": "minecraft:skeleton",
			"scripts": {
				"animate": ["moon_stage"]
			},
			"animations": {
				"moon_stage": "controller.animation.entity.normal.moon_stage"
			}
		},
		"component_groups": {
			"resurge:moon_variant": {
				"minecraft:variant": {
					"value": 1
				}
			},

			"resurge:normal_mode_controller": {
				"minecraft:mark_variant": {
					"value": 0 //标识普通状态
				},
				"minecraft:environment_sensor": {
					"triggers": [
						{
							"filters": {
								"test": "has_ranged_weapon",
								"value": false
							},
							"event": "resurge:normal_melee_mode"
						},
						{
							"filters": {
								"test": "has_ranged_weapon",
								"value": true
							},
							"event": "resurge:normal_ranged_mode"
						}
					]
				}
			},
			"resurge:normal_melee_mode": {
				"minecraft:behavior.melee_attack": {
					"priority": 1,
					"track_target": true,
					"speed_multiplier": 1.0
				},
				"minecraft:attack": {
					"damage": 7
				},
				"minecraft:environment_sensor": {
					"triggers": [
						{
							"filters": {
								"test": "has_ranged_weapon",
								"value": true
							},
							"event": "resurge:normal_ranged_mode"
						}
					]
				}
			},
			"resurge:normal_ranged_mode": {
				"minecraft:behavior.avoid_mob_type": {
					"priority": 0,
					"entity_types": [
						{
							"filters": {
								"any_of": [
									{
										"test": "is_target",
										"subject": "other",
										"value": true
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "friend"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "darkness"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "wolf"
									}
								]
							},
							"max_dist": 12
						}
					],
					"avoid_target_xz": 24,
					"avoid_target_y": 12,
					"max_dist": 12,
					"max_flee": 4,
					"ignore_visibility": false
				},
				"minecraft:behavior.ranged_attack": {
					"priority": 1,
					"attack_interval_min": 0.8,
					"attack_interval_max": 2.4,
					"attack_radius": 40.0,
					"speed_multiplier": 1.0,
					"x_max_rotation": 60.0,
					"y_max_head_rotation": 60.0
				},
				"minecraft:shooter": {
					"def": "resurge:arrow_mob<resurge:skeleton_raged_arrow>"
				},
				"minecraft:environment_sensor": {
					"triggers": [
						{
							"filters": {
								"test": "has_ranged_weapon",
								"value": false
							},
							"event": "resurge:normal_melee_mode"
						}
					]
				}
			},
			"resurge:normal_break_blocks": {
				"minecraft:break_blocks": {
					"breakable_blocks": [
						"web",
						"cactus",
						"bamboo",
						"sweet_berry_bush",
						"pointed_dripstone"
					]
				}
			},

			"resurge:power_mode_controller": {
				"minecraft:is_charged": {},
				"minecraft:mark_variant": {
					"value": 1 //标识充能状态
				},
				"minecraft:environment_sensor": {
					"triggers": [
						{
							"filters": {
								"test": "has_ranged_weapon",
								"value": false
							},
							"event": "resurge:power_melee_mode"
						},
						{
							"filters": {
								"test": "has_ranged_weapon",
								"value": true
							},
							"event": "resurge:power_ranged_mode"
						}
					]
				},
				"minecraft:timer": {
					"looping": false,
					"time": 16.0,
					"time_down_event": {
						"event": "resurge:lost_power"
					}
				}
			},
			"resurge:power_melee_mode": {
				"minecraft:behavior.melee_attack": {
					"priority": 1,
					"track_target": true,
					"speed_multiplier": 1.0,
					"cooldown_time": 0.5
				},
				"minecraft:attack": {
					"damage": 7
				},
				"minecraft:environment_sensor": {
					"triggers": [
						{
							"filters": {
								"test": "has_ranged_weapon",
								"value": true
							},
							"event": "resurge:power_ranged_mode"
						}
					]
				}
			},
			"resurge:power_ranged_mode": {
				"minecraft:behavior.avoid_mob_type": {
					"priority": 0,
					"entity_types": [
						{
							"filters": {
								"any_of": [
									{
										"test": "is_target",
										"subject": "other",
										"value": true
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "friend"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "darkness"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "wolf"
									}
								]
							},
							"max_dist": 6
						}
					],
					"avoid_target_xz": 16,
					"avoid_target_y": 8,
					"max_dist": 8,
					"max_flee": 2,
					"ignore_visibility": false
				},
				"minecraft:behavior.ranged_attack": {
					"priority": 1,
					"attack_interval_min": 0.4,
					"attack_interval_max": 1.2,
					"attack_radius": 40.0,
					"speed_multiplier": 1.0,
					"x_max_rotation": 60.0,
					"y_max_head_rotation": 60.0
				},
				"minecraft:shooter": {
					"def": "resurge:arrow_mob<resurge:skeleton_raged_arrow>"
				},
				"minecraft:environment_sensor": {
					"triggers": [
						{
							"filters": {
								"test": "has_ranged_weapon",
								"value": false
							},
							"event": "resurge:power_melee_mode"
						}
					]
				}
			},
			"resurge:power_break_blocks": {
				"minecraft:break_blocks": {
					"breakable_blocks": [
						//###怪物基础可破坏物品
						"web",
						"cactus",
						"bamboo",
						"sweet_berry_bush",

						//###工作类方块
						//#方块(不重要)
						"crafting_table",
						"stonecutter_block",
						"cartography_table",
						"lectern",
						"fletching_table",
						"smithing_table",
						"loom",
						"bookshelf",
						"composter",

						//###红石类物品
						//#绊线钩
						"tripwire",
						"tripwire_hook",
						//#活塞
						"piston",
						"sticky_piston",
						"pistonArmCollision",
						"stickyPistonArmCollision",

						//###木质方块
						//#原木、去皮原木
						"log",
						"log2",
						"crimson_stem",
						"warped_stem",
						"stripped_spruce_log",
						"stripped_birch_log",
						"stripped_jungle_log",
						"stripped_acacia_log",
						"stripped_dark_oak_log",
						"stripped_oak_log",
						"stripped_crimson_stem",
						"stripped_warped_stem",
						"mangrove_log",
						"stripped_mangrove_log",
						//#木头
						"wood",
						"crimson_hyphae",
						"warped_hyphae",
						"stripped_crimson_hyphae",
						"stripped_warped_hyphae",
						"mangrove_wood",
						"stripped_mangrove_wood",
						//#木板
						"planks",
						"crimson_planks",
						"warped_planks",
						"mangrove_planks",
						//#半砖
						"double_wooden_slab",
						"wooden_slab",
						"crimson_double_slab",
						"crimson_slab",
						"warped_double_slab",
						"warped_slab",
						"mangrove_double_slab",
						"mangrove_slab",
						//#楼梯
						"oak_stairs",
						"spruce_stairs",
						"birch_stairs",
						"jungle_stairs",
						"acacia_stairs",
						"dark_oak_stairs",
						"crimson_stairs",
						"warped_stairs",
						"mangrove_stairs",
						//#栅栏
						"fence",
						"crimson_fence",
						"warped_fence",
						"mangrove_fence",
						//#栅栏门
						"fence_gate",
						"spruce_fence_gate",
						"birch_fence_gate",
						"jungle_fence_gate",
						"acacia_fence_gate",
						"dark_oak_fence_gate",
						"crimson_fence_gate",
						"warped_fence_gate",
						"mangrove_fence_gate",
						//#活板门
						"trapdoor",
						"spruce_trapdoor",
						"birch_trapdoor",
						"jungle_trapdoor",
						"acacia_trapdoor",
						"dark_oak_trapdoor",
						"crimson_trapdoor",
						"warped_trapdoor",
						"mangrove_trapdoor",
						//#门
						"wooden_door",
						"spruce_door",
						"birch_door",
						"jungle_door",
						"acacia_door",
						"dark_oak_door",
						"crimson_door",
						"warped_door",
						"mangrove_door",
						//#告示牌
						"standing_sign",
						"spruce_standing_sign",
						"birch_standing_sign",
						"jungle_standing_sign",
						"acacia_standing_sign",
						"darkoak_standing_sign",
						"crimson_standing_sign",
						"warped_standing_sign",
						"wall_sign",
						"spruce_wall_sign",
						"birch_wall_sign",
						"jungle_wall_sign",
						"acacia_wall_sign",
						"darkoak_wall_sign",
						"crimson_wall_sign",
						"warped_wall_sign",
						"mangrove_standing_sign",
						"mangrove_wall_sign",
						//#梯子
						"ladder",

						//###硬度[0,1]的方块
						//#楼梯
						"quartz_stairs",
						"smooth_quartz_stairs",
						"sandstone_stairs",
						"smooth_sandstone_stairs",
						"red_sandstone_stairs",
						"smooth_red_sandstone_stairs",
						//#方块
						"quartz_block",
						"quartz_bricks",
						"sandstone",
						"red_sandstone",
						"calcite",
						"wool",
						"grass_path",
						"clay",
						"farmland",
						"grass",
						"gravel",
						"mycelium",
						"sponge",
						"dirt",
						"dirt_with_roots",
						"concretepowder",
						"ice",
						"magma",
						"packed_ice",
						"frosted_ice",
						"podzol",
						"sand",
						"soul_sand",
						"soul_soil",
						"netherrack",
						"crimson_nylium",
						"warped_nylium",
						"snow",
						"moss_block",
						"monster_egg",
						"infested_deepslate",
						"tnt",
						"sculk",
						"mangrove_roots",
						"muddy_mangrove_roots",
						"mud",
						"packed_mud",
						//#半实心方块
						"snow_layer",
						//#全透明方块
						"scaffolding",
						"powder_snow",

						//###硬度(1,2)的方块
						//#半砖
						"blackstone_double_slab",
						"blackstone_slab",
						"polished_blackstone_brick_double_slab",
						"polished_blackstone_brick_slab",
						"mud_brick_double_slab",
						"mud_brick_slab",
						//#半砖（注：包含许多不符合条件的方块）
						"double_stone_slab",
						"stone_slab",
						"double_stone_slab2",
						"stone_slab2",
						"double_stone_slab3",
						"stone_slab3",
						"double_stone_slab4",
						"stone_slab4",
						//#墙
						"blackstone_wall",
						"polished_blackstone_brick_wall",
						"mud_brick_wall",
						//#墙（注：包含许多不符合条件的方块）
						"cobblestone_wall",
						//#楼梯
						"normal_stone_stairs", //石头
						"granite_stairs",
						"polished_granite_stairs",
						"diorite_stairs",
						"polished_diorite_stairs",
						"andesite_stairs",
						"polished_andesite_stairs",
						"stone_brick_stairs",
						"mossy_stone_brick_stairs",
						"sandstone_stairs",
						"smooth_sandstone_stairs",
						"red_sandstone_stairs",
						"smooth_red_sandstone_stairs",
						"purpur_stairs",
						"prismarine_stairs",
						"prismarine_bricks_stairs",
						"dark_prismarine_stairs",
						"blackstone_stairs",
						"polished_blackstone_brick_stairs",
						"mud_brick_stairs",
						//#方块
						"concrete",
						"stone",
						"blackstone",
						"amethyst_block",
						"budding_amethyst",
						"dripstone_block",
						"polished_blackstone_bricks",
						"cracked_polished_blackstone_bricks",
						"gilded_blackstone",
						"coral_block",
						"prismarine",
						"stonebrick",
						"purpur_block",
						"tuff",
						"white_glazed_terracotta",
						"orange_glazed_terracotta",
						"magenta_glazed_terracotta",
						"light_blue_glazed_terracotta",
						"yellow_glazed_terracotta",
						"lime_glazed_terracotta",
						"pink_glazed_terracotta",
						"gray_glazed_terracotta",
						"silver_glazed_terracotta",
						"cyan_glazed_terracotta",
						"purple_glazed_terracotta",
						"blue_glazed_terracotta",
						"brown_glazed_terracotta",
						"green_glazed_terracotta",
						"red_glazed_terracotta",
						"black_glazed_terracotta",
						"hardened_clay",
						"stained_hardened_clay",
						"basalt",
						"polished_basalt",
						"smooth_basalt",
						"mud_bricks",
						//#非实心方块
						"small_amethyst_bud",
						"medium_amethyst_bud",
						"large_amethyst_bud",
						"amethyst_cluster",

						//###硬度2的方块
						//#楼梯
						"stone_stairs", //圆石
						"mossy_cobblestone_stairs",
						//#方块
						"cobblestone",
						"mossy_cobblestone",

						//###动物与植物类物品
						//#方块
						"melon_block",
						"nether_wart_block",
						"warped_wart_block",
						"pumpkin",
						"bee_nest",
						"beehive",
						"chorus_flower",
						"brown_mushroom_block",
						"red_mushroom_block",
						"leaves",
						"leaves2",
						"azalea_leaves",
						"azalea_leaves_flowered",
						"mangrove_leaves",
						//#半实心方块
						"bamboo",
						"cactus",
						"chorus_plant",
						"cocoa",
						"waterlily",

						//###其它装饰性方块
						//#方块
						"lit_pumpkin",
						"carved_pumpkin",
						"shroomlight",
						"honeycomb_block",
						"hay_block",
						"dried_kelp_block",
						"glass",
						"stained_glass",
						"tinted_glass",
						"glowstone",
						"sealantern",
						"honey_block",
						"slime"
					]
				}
			},

			"resurge:damage_stage0": {
				"minecraft:damage_sensor": {
					"triggers": [
						{
							"cause": "fall",
							"deals_damage": false
						},
						{
							"on_damage": {
								"filters": {
									"test": "is_family",
									"subject": "other",
									"value": "lightning"
								},
								"event": "resurge:has_power"
							},
							"deals_damage": false
						},
						{
							"on_damage": {
								"filters": [
									{
										"any_of": [
											{
												"test": "has_damage",
												"subject": "self",
												"value": "attack"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "magic"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "projectile"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "sonic_boom"
											}
										]
									},
									{
										"any_of": [
											{
												"all_of": [
													{
														"test": "has_damage",
														"subject": "self",
														"value": "fatal"
													},
													{
														"test": "random_chance",
														"value": 5
													}
												]
											},
											{
												"all_of": [
													{
														"test": "has_damage",
														"subject": "self",
														"operator": "!=",
														"value": "fatal"
													},
													{
														"test": "random_chance",
														"value": 64
													}
												]
											}
										]
									}
								],
								"event": "resurge:has_power"
							},
							"damage_modifier": -10000 //此处使用减法将伤害降至0，以正常显示受伤动画
						},
						{
							"on_damage": {
								"filters": [
									{
										"any_of": [
											{
												"test": "has_damage",
												"subject": "self",
												"value": "attack"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "magic"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "projectile"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "sonic_boom"
											}
										]
									},
									{
										"any_of": [
											{
												"all_of": [
													{
														"test": "is_mark_variant",
														"subject": "self",
														"value": 0
													},
													{
														"test": "random_chance",
														"value": 10
													}
												]
											},
											{
												"all_of": [
													{
														"test": "is_mark_variant",
														"subject": "self",
														"value": 1
													},
													{
														"test": "random_chance",
														"value": 5
													}
												]
											}
										]
									}
								],
								"event": "universal:lightning_bolt_attack",
								"target": "other"
							}
						}
					]
				}
			},
			"resurge:damage_stage1": {
				"minecraft:damage_sensor": {
					"triggers": [
						{
							"cause": "fall",
							"deals_damage": false
						},
						{
							"on_damage": {
								"filters": {
									"test": "is_family",
									"subject": "other",
									"value": "lightning"
								},
								"event": "resurge:has_power"
							},
							"deals_damage": false
						},
						{
							"on_damage": {
								"filters": [
									{
										"any_of": [
											{
												"test": "has_damage",
												"subject": "self",
												"value": "attack"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "magic"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "projectile"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "sonic_boom"
											}
										]
									},
									{
										"any_of": [
											{
												"all_of": [
													{
														"test": "has_damage",
														"subject": "self",
														"value": "fatal"
													},
													{
														"test": "random_chance",
														"value": 5
													}
												]
											},
											{
												"all_of": [
													{
														"test": "has_damage",
														"subject": "self",
														"operator": "!=",
														"value": "fatal"
													},
													{
														"test": "random_chance",
														"value": 48
													}
												]
											}
										]
									}
								],
								"event": "resurge:has_power"
							},
							"damage_modifier": -10000 //此处使用减法将伤害降至0，以正常显示受伤动画
						},
						{
							"on_damage": {
								"filters": [
									{
										"any_of": [
											{
												"test": "has_damage",
												"subject": "self",
												"value": "attack"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "magic"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "projectile"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "sonic_boom"
											}
										]
									},
									{
										"any_of": [
											{
												"all_of": [
													{
														"test": "is_mark_variant",
														"subject": "self",
														"value": 0
													},
													{
														"test": "random_chance",
														"value": 10
													}
												]
											},
											{
												"all_of": [
													{
														"test": "is_mark_variant",
														"subject": "self",
														"value": 1
													},
													{
														"test": "random_chance",
														"value": 5
													}
												]
											}
										]
									}
								],
								"event": "universal:lightning_bolt_attack",
								"target": "other"
							}
						}
					]
				}
			},
			"resurge:damage_stage2": {
				"minecraft:damage_sensor": {
					"triggers": [
						{
							"cause": "fall",
							"deals_damage": false
						},
						{
							"on_damage": {
								"filters": {
									"test": "is_family",
									"subject": "other",
									"value": "lightning"
								},
								"event": "resurge:has_power"
							},
							"deals_damage": false
						},
						{
							"on_damage": {
								"filters": [
									{
										"any_of": [
											{
												"test": "has_damage",
												"subject": "self",
												"value": "attack"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "magic"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "projectile"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "sonic_boom"
											}
										]
									},
									{
										"any_of": [
											{
												"all_of": [
													{
														"test": "has_damage",
														"subject": "self",
														"value": "fatal"
													},
													{
														"test": "random_chance",
														"value": 5
													}
												]
											},
											{
												"all_of": [
													{
														"test": "has_damage",
														"subject": "self",
														"operator": "!=",
														"value": "fatal"
													},
													{
														"test": "random_chance",
														"value": 36
													}
												]
											}
										]
									}
								],
								"event": "resurge:has_power"
							},
							"damage_modifier": -10000 //此处使用减法将伤害降至0，以正常显示受伤动画
						},
						{
							"on_damage": {
								"filters": [
									{
										"any_of": [
											{
												"test": "has_damage",
												"subject": "self",
												"value": "attack"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "magic"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "projectile"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "sonic_boom"
											}
										]
									},
									{
										"any_of": [
											{
												"all_of": [
													{
														"test": "is_mark_variant",
														"subject": "self",
														"value": 0
													},
													{
														"test": "random_chance",
														"value": 10
													}
												]
											},
											{
												"all_of": [
													{
														"test": "is_mark_variant",
														"subject": "self",
														"value": 1
													},
													{
														"test": "random_chance",
														"value": 5
													}
												]
											}
										]
									}
								],
								"event": "universal:lightning_bolt_attack",
								"target": "other"
							}
						}
					]
				}
			},
			"resurge:damage_stage3": {
				"minecraft:damage_sensor": {
					"triggers": [
						{
							"cause": "fall",
							"deals_damage": false
						},
						{
							"on_damage": {
								"filters": {
									"test": "is_family",
									"subject": "other",
									"value": "lightning"
								},
								"event": "resurge:has_power"
							},
							"deals_damage": false
						},
						{
							"on_damage": {
								"filters": [
									{
										"any_of": [
											{
												"test": "has_damage",
												"subject": "self",
												"value": "attack"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "magic"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "projectile"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "sonic_boom"
											}
										]
									},
									{
										"any_of": [
											{
												"all_of": [
													{
														"test": "has_damage",
														"subject": "self",
														"value": "fatal"
													},
													{
														"test": "random_chance",
														"value": 5
													}
												]
											},
											{
												"all_of": [
													{
														"test": "has_damage",
														"subject": "self",
														"operator": "!=",
														"value": "fatal"
													},
													{
														"test": "random_chance",
														"value": 27
													}
												]
											}
										]
									}
								],
								"event": "resurge:has_power"
							},
							"damage_modifier": -10000 //此处使用减法将伤害降至0，以正常显示受伤动画
						},
						{
							"on_damage": {
								"filters": [
									{
										"any_of": [
											{
												"test": "has_damage",
												"subject": "self",
												"value": "attack"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "magic"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "projectile"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "sonic_boom"
											}
										]
									},
									{
										"any_of": [
											{
												"all_of": [
													{
														"test": "is_mark_variant",
														"subject": "self",
														"value": 0
													},
													{
														"test": "random_chance",
														"value": 10
													}
												]
											},
											{
												"all_of": [
													{
														"test": "is_mark_variant",
														"subject": "self",
														"value": 1
													},
													{
														"test": "random_chance",
														"value": 5
													}
												]
											}
										]
									}
								],
								"event": "universal:lightning_bolt_attack",
								"target": "other"
							}
						}
					]
				}
			},
			"resurge:damage_stage4": {
				"minecraft:damage_sensor": {
					"triggers": [
						{
							"cause": "fall",
							"deals_damage": false
						},
						{
							"on_damage": {
								"filters": {
									"test": "is_family",
									"subject": "other",
									"value": "lightning"
								},
								"event": "resurge:has_power"
							},
							"deals_damage": false
						},
						{
							"on_damage": {
								"filters": [
									{
										"any_of": [
											{
												"test": "has_damage",
												"subject": "self",
												"value": "attack"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "magic"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "projectile"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "sonic_boom"
											}
										]
									},
									{
										"any_of": [
											{
												"all_of": [
													{
														"test": "has_damage",
														"subject": "self",
														"value": "fatal"
													},
													{
														"test": "random_chance",
														"value": 5
													}
												]
											},
											{
												"all_of": [
													{
														"test": "has_damage",
														"subject": "self",
														"operator": "!=",
														"value": "fatal"
													},
													{
														"test": "random_chance",
														"value": 21
													}
												]
											}
										]
									}
								],
								"event": "resurge:has_power"
							},
							"damage_modifier": -10000 //此处使用减法将伤害降至0，以正常显示受伤动画
						},
						{
							"on_damage": {
								"filters": [
									{
										"any_of": [
											{
												"test": "has_damage",
												"subject": "self",
												"value": "attack"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "magic"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "projectile"
											},
											{
												"test": "has_damage",
												"subject": "self",
												"value": "sonic_boom"
											}
										]
									},
									{
										"any_of": [
											{
												"all_of": [
													{
														"test": "is_mark_variant",
														"subject": "self",
														"value": 0
													},
													{
														"test": "random_chance",
														"value": 10
													}
												]
											},
											{
												"all_of": [
													{
														"test": "is_mark_variant",
														"subject": "self",
														"value": 1
													},
													{
														"test": "random_chance",
														"value": 5
													}
												]
											}
										]
									}
								],
								"event": "universal:lightning_bolt_attack",
								"target": "other"
							}
						}
					]
				}
			},

			"resurge:moon_calm_timer": {
				"minecraft:timer": {
					"looping": false,
					"time": [0, 30],
					"time_down_event": {
						"event": "resurge:calm"
					}
				},
				"minecraft:is_shaking": {}
			},

			"resurge:calm": {
				"minecraft:transformation": {
					"into": "minecraft:skeleton",
					"preserve_equipment": true
				}
			}
		},

		"components": {
			"minecraft:is_hidden_when_invisible": {},
			"minecraft:experience_reward": {
				"on_death": "query.last_hit_by_player ? 14 + (query.equipment_count * Math.Random(1,6)) : Math.Random(0,1)"
			},
			"minecraft:equip_item": {},
			"minecraft:collision_box": {
				"width": 0.6,
				"height": 1.9
			},
			"minecraft:type_family": {
				"family": ["skeleton_raged", "raged", "skeleton", "undead", "monster", "mob"]
			},
			"minecraft:breathable": {
				"total_supply": 15,
				"suffocate_time": 0,
				"breathes_water": true
			},

			"minecraft:break_blocks": {
				"breakable_blocks": [
					"web",
					"cactus",
					"bamboo",
					"sweet_berry_bush",
					"pointed_dripstone"
				]
			},

			"minecraft:health": {
				"value": 48,
				"max": 48
			},
			"minecraft:hurt_on_condition": {
				"damage_conditions": [
					{
						"filters": {
							"test": "in_lava",
							"subject": "self",
							"operator": "==",
							"value": true
						},
						"cause": "lava",
						"damage_per_tick": 4
					}
				]
			},

			"minecraft:loot": {
				"table": "loot_tables/entities/skeleton_raged.json"
			},
			"minecraft:equipment": {
				"table": "loot_tables/entities/skeleton_gear.json",
				"slot_drop_chance": [
					{
						"slot": "slot.weapon.mainhand",
						"drop_chance": 0.05
					}
				]
			},

			"minecraft:friction_modifier": {
				"value": 1.0
			},
			"minecraft:movement": {
				"value": 0.5
			},
			"minecraft:underwater_movement": {
				"value": 0.2
			},
			"minecraft:navigation.fly": {
				"is_amphibious": true,
				"avoid_sun": false,
				"avoid_water": true,
				"can_swim": true,
				"can_path_over_water": true
			},
			"minecraft:movement.basic": {
				"max_turn": 60.0
			},
			"minecraft:preferred_path": {
				"max_fall_blocks": 256
			},
			"minecraft:jump.static": {},
			"minecraft:can_climb": {},
			"minecraft:can_fly": {},
			"minecraft:floats_in_liquid": {},
			"minecraft:nameable": {},

			"minecraft:despawn": {
				"despawn_from_distance": {}
			},
			"minecraft:shareables": {
				"items": [
					{
						"item": "minecraft:trident",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 0
					},

					{
						"item": "minecraft:netherite_sword",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 0
					},
					{
						"item": "minecraft:diamond_sword",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 1
					},
					{
						"item": "minecraft:iron_sword",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 2
					},
					{
						"item": "minecraft:stone_sword",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 3
					},
					{
						"item": "minecraft:golden_sword",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 4
					},
					{
						"item": "minecraft:wooden_sword",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 5
					},
					{
						"item": "minecraft:bow",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 6
					},
					{
						"item": "minecraft:netherite_helmet",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 0
					},
					{
						"item": "minecraft:diamond_helmet",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 1
					},
					{
						"item": "minecraft:iron_helmet",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 2
					},
					{
						"item": "minecraft:chainmail_helmet",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 3
					},
					{
						"item": "minecraft:golden_helmet",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 4
					},
					{
						"item": "minecraft:leather_helmet",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 5
					},
					{
						"item": "minecraft:turtle_helmet",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 6
					},
					{
						"item": "minecraft:skull:0",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 7
					},
					{
						"item": "minecraft:skull:1",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 7
					},
					{
						"item": "minecraft:carved_pumpkin",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 7
					},
					{
						"item": "minecraft:netherite_chestplate",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 0
					},
					{
						"item": "minecraft:diamond_chestplate",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 1
					},
					{
						"item": "minecraft:iron_chestplate",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 2
					},
					{
						"item": "minecraft:chainmail_chestplate",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 3
					},
					{
						"item": "minecraft:golden_chestplate",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 4
					},
					{
						"item": "minecraft:leather_chestplate",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 5
					},
					{
						"item": "minecraft:netherite_leggings",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 0
					},
					{
						"item": "minecraft:diamond_leggings",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 1
					},
					{
						"item": "minecraft:iron_leggings",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 2
					},
					{
						"item": "minecraft:chainmail_leggings",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 3
					},
					{
						"item": "minecraft:golden_leggings",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 4
					},
					{
						"item": "minecraft:leather_leggings",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 5
					},
					{
						"item": "minecraft:netherite_boots",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 0
					},
					{
						"item": "minecraft:diamond_boots",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 1
					},
					{
						"item": "minecraft:iron_boots",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 2
					},
					{
						"item": "minecraft:chainmail_boots",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 3
					},
					{
						"item": "minecraft:golden_boots",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 4
					},
					{
						"item": "minecraft:leather_boots",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 5
					}
				]
			},

			"minecraft:follow_range": {
				"value": 60,
				"max": 60
			},

			"minecraft:behavior.summon_entity": {
				"priority": 0,
				"summon_choices": [
					{
						"min_activation_range": 0.0,
						"max_activation_range": 12.0,
						"cooldown_time": 60.0,
						"weight": 1,
						"cast_duration": 1.6,
						"do_casting": true,
						"particle_color": "#FF1CBBFF",
						"start_sound_event": "cast.spell",
						"sequence": [
							{
								"shape": "circle",
								"target": "self",
								"base_delay": 1.0,
								"delay_per_summon": 0.2,
								"summon_cap": 6,
								"summon_cap_radius": 10.0,
								"entity_type": "minecraft:silverfish",
								"num_entities_spawned": 3,
								"entity_lifespan": 120,
								"size": 1.0
							}
						]
					}
				]
			},
			"minecraft:behavior.hurt_by_target": {
				"priority": 2,
				"alert_same_type": true,
				"entity_types": [
					{
						"filters": {
							"all_of": [
								{
									"test": "is_family",
									"subject": "other",
									"operator": "!=",
									"value": "skeleton"
								},
								{
									"test": "is_family",
									"subject": "other",
									"operator": "!=",
									"value": "witch"
								},
								{
									"test": "is_family",
									"subject": "other",
									"operator": "!=",
									"value": "arthropod"
								},
								{
									"test": "is_family",
									"subject": "other",
									"operator": "!=",
									"value": "raged"
								}
							]
						}
					}
				]
			},
			"minecraft:behavior.nearest_attackable_target": {
				"priority": 3,
				"must_reach": false,
				"must_see": false, //因filter内部进行了定义，此处实际无效
				"must_see_forget_duration": 20.0,
				"persist_time": 5,
				"reselect_targets": true,
				"within_radius": 60.0, //因定义了follow_range，此处实际无效
				"entity_types": [
					{
						"filters": {
							"any_of": [
								{
									"test": "is_family",
									"subject": "other",
									"value": "player"
								},
								{
									"test": "is_family",
									"subject": "other",
									"value": "friend"
								},
								{
									"test": "is_family",
									"subject": "other",
									"value": "darkness"
								}
							]
						},
						"max_dist": 40,
						"must_see": false
					},
					{
						"filters": {
							"any_of": [
								{
									"test": "is_family",
									"subject": "other",
									"value": "allay"
								},
								{
									"test": "is_family",
									"subject": "other",
									"value": "bee"
								},
								{
									"test": "is_family",
									"subject": "other",
									"value": "turtle"
								},
								{
									"test": "is_family",
									"subject": "other",
									"value": "wolf"
								}
							]
						},
						"max_dist": 40,
						"must_see": true
					}
				]
			},
			"minecraft:behavior.equip_item": {
				"priority": 4
			},
			"minecraft:behavior.pickup_items": {
				"priority": 5,
				"max_dist": 6,
				"goal_radius": 3,
				"speed_multiplier": 1.0,
				"pickup_based_on_chance": true,
				"can_pickup_any_item": true
			},
			"minecraft:behavior.random_stroll": {
				"priority": 6,
				"speed_multiplier": 1
			},
			"minecraft:behavior.look_at_player": {
				"priority": 7,
				"look_distance": 8
			},
			"minecraft:behavior.random_look_around": {
				"priority": 8
			},

			"minecraft:environment_sensor": {
				"triggers": [
					{
						"filters": {
							"test": "has_ranged_weapon",
							"value": false
						},
						"event": "resurge:normal_melee_mode"
					},
					{
						"filters": {
							"test": "has_ranged_weapon",
							"value": true
						},
						"event": "resurge:normal_ranged_mode"
					}
				]
			},

			"minecraft:physics": {},
			"minecraft:pushable": {
				"is_pushable": true,
				"is_pushable_by_piston": true
			},
			"minecraft:conditional_bandwidth_optimization": {}
		},

		"events": {
			"minecraft:entity_spawned": {},
			"resurge:from_moon": {
				"add": {
					"component_groups": ["resurge:moon_variant"]
				}
			},

			"resurge:has_power": {
				"sequence": [
					{
						"filters": {
							"test": "has_component",
							"operator": "!=",
							"value": "minecraft:timer"
						},
						"add": {
							"component_groups": ["resurge:power_mode_controller"]
						},
						"remove": {
							"component_groups": [
								"resurge:normal_mode_controller",
								"resurge:normal_melee_mode",
								"resurge:normal_ranged_mode"
							]
						},
						"run_command": {
							"command": [
								"effect @s absorption 16 3 false",
								"effect @s resistance 16 0 false"
							]
						}
					},
					{
						"filters": {
							"all_of": [
								{
									"test": "is_underwater",
									"value": false
								},
								{
									"test": "has_component",
									"operator": "!=",
									"value": "minecraft:timer"
								}
							]
						},
						"add": {
							"component_groups": ["resurge:power_break_blocks"]
						},
						"remove": {
							"component_groups": ["resurge:normal_break_blocks"]
						}
					}
				]
			},
			"resurge:lost_power": {
				"add": {
					"component_groups": [
						"resurge:normal_mode_controller",
						"resurge:normal_break_blocks"
					]
				},
				"remove": {
					"component_groups": [
						"resurge:power_mode_controller",
						"resurge:power_melee_mode",
						"resurge:power_ranged_mode",
						"resurge:power_break_blocks"
					]
				}
			},

			"resurge:normal_melee_mode": {
				"add": {
					"component_groups": ["resurge:normal_melee_mode"]
				},
				"remove": {
					"component_groups": ["resurge:normal_ranged_mode"]
				}
			},
			"resurge:normal_ranged_mode": {
				"add": {
					"component_groups": ["resurge:normal_ranged_mode"]
				},
				"remove": {
					"component_groups": ["resurge:normal_melee_mode"]
				}
			},

			"resurge:power_melee_mode": {
				"add": {
					"component_groups": ["resurge:power_melee_mode"]
				},
				"remove": {
					"component_groups": ["resurge:power_ranged_mode"]
				}
			},
			"resurge:power_ranged_mode": {
				"add": {
					"component_groups": ["resurge:power_ranged_mode"]
				},
				"remove": {
					"component_groups": ["resurge:power_melee_mode"]
				}
			},

			"resurge:moon_stage0": {
				"sequence": [
					//此处主动关闭充能模式，以避免出现充能timer被覆盖，无法恢复的情况
					{
						"filters": {
							"test": "is_variant",
							"value": 1
						},
						"add": {
							"component_groups": [
								"resurge:normal_mode_controller",
								"resurge:normal_break_blocks",
								"resurge:moon_calm_timer"
							]
						},
						"remove": {
							"component_groups": [
								"resurge:power_mode_controller",
								"resurge:power_melee_mode",
								"resurge:power_ranged_mode",
								"resurge:power_break_blocks"
							]
						}
					},
					{
						"add": {
							"component_groups": ["resurge:damage_stage0"]
						},
						"remove": {
							"component_groups": [
								"resurge:damage_stage1",
								"resurge:damage_stage2",
								"resurge:damage_stage3",
								"resurge:damage_stage4"
							]
						}
					}
				]
			},
			"resurge:moon_stage1": {
				"sequence": [
					//此处主动关闭充能模式，以避免出现充能timer被覆盖，无法恢复的情况
					{
						"filters": {
							"test": "is_variant",
							"value": 1
						},
						"add": {
							"component_groups": [
								"resurge:normal_mode_controller",
								"resurge:normal_break_blocks",
								"resurge:moon_calm_timer"
							]
						},
						"remove": {
							"component_groups": [
								"resurge:power_mode_controller",
								"resurge:power_melee_mode",
								"resurge:power_ranged_mode",
								"resurge:power_break_blocks"
							]
						}
					},
					{
						"add": {
							"component_groups": ["resurge:damage_stage1"]
						},
						"remove": {
							"component_groups": [
								"resurge:damage_stage0",
								"resurge:damage_stage2",
								"resurge:damage_stage3",
								"resurge:damage_stage4"
							]
						}
					}
				]
			},
			"resurge:moon_stage2": {
				"sequence": [
					//此处主动关闭充能模式，以避免出现充能timer被覆盖，无法恢复的情况
					{
						"filters": {
							"test": "is_variant",
							"value": 1
						},
						"add": {
							"component_groups": [
								"resurge:normal_mode_controller",
								"resurge:normal_break_blocks",
								"resurge:moon_calm_timer"
							]
						},
						"remove": {
							"component_groups": [
								"resurge:power_mode_controller",
								"resurge:power_melee_mode",
								"resurge:power_ranged_mode",
								"resurge:power_break_blocks"
							]
						}
					},
					{
						"add": {
							"component_groups": ["resurge:damage_stage2"]
						},
						"remove": {
							"component_groups": [
								"resurge:damage_stage0",
								"resurge:damage_stage1",
								"resurge:damage_stage3",
								"resurge:damage_stage4"
							]
						}
					}
				]
			},
			"resurge:moon_stage3": {
				"sequence": [
					//此处主动关闭充能模式，以避免出现充能timer被覆盖，无法恢复的情况
					{
						"filters": {
							"test": "is_variant",
							"value": 1
						},
						"add": {
							"component_groups": [
								"resurge:normal_mode_controller",
								"resurge:normal_break_blocks",
								"resurge:moon_calm_timer"
							]
						},
						"remove": {
							"component_groups": [
								"resurge:power_mode_controller",
								"resurge:power_melee_mode",
								"resurge:power_ranged_mode",
								"resurge:power_break_blocks"
							]
						}
					},
					{
						"add": {
							"component_groups": ["resurge:damage_stage3"]
						},
						"remove": {
							"component_groups": [
								"resurge:damage_stage0",
								"resurge:damage_stage1",
								"resurge:damage_stage2",
								"resurge:damage_stage4"
							]
						}
					}
				]
			},
			"resurge:moon_stage4_day": {
				"sequence": [
					//此处主动关闭充能模式，以避免出现充能timer被覆盖，无法恢复的情况
					{
						"filters": {
							"test": "is_variant",
							"value": 1
						},
						"add": {
							"component_groups": [
								"resurge:normal_mode_controller",
								"resurge:normal_break_blocks",
								"resurge:moon_calm_timer"
							]
						},
						"remove": {
							"component_groups": [
								"resurge:power_mode_controller",
								"resurge:power_melee_mode",
								"resurge:power_ranged_mode",
								"resurge:power_break_blocks"
							]
						}
					},
					{
						"add": {
							"component_groups": ["resurge:damage_stage4"]
						},
						"remove": {
							"component_groups": [
								"resurge:damage_stage0",
								"resurge:damage_stage1",
								"resurge:damage_stage2",
								"resurge:damage_stage3"
							]
						}
					}
				]
			},
			"resurge:moon_stage4_night": {
				"sequence": [
					{
						"filters": {
							"test": "is_variant",
							"value": 1
						},
						"remove": {
							"component_groups": ["resurge:moon_calm_timer"]
						}
					},
					{
						"add": {
							"component_groups": ["resurge:damage_stage4"]
						},
						"remove": {
							"component_groups": [
								"resurge:damage_stage0",
								"resurge:damage_stage1",
								"resurge:damage_stage2",
								"resurge:damage_stage3"
							]
						}
					}
				]
			},

			"resurge:calm": {
				"add": {
					"component_groups": ["resurge:calm"]
				}
			},

			"universal:lightning_bolt_attack": {
				"run_command": {
					"command": ["summon lightning_bolt ~~~"]
				}
			},

			"universal:get_real_damage_1": {
				"run_command": {
					"command": ["damage @s 1 none @s"]
				}
			},
			"universal:get_real_damage_2": {
				"run_command": {
					"command": ["damage @s 2 none @s"]
				}
			},
			"universal:get_real_damage_3": {
				"run_command": {
					"command": ["damage @s 3 none @s"]
				}
			},
			"universal:get_real_damage_4": {
				"run_command": {
					"command": ["damage @s 4 none @s"]
				}
			},
			"universal:get_real_damage_5": {
				"run_command": {
					"command": ["damage @s 5 none @s"]
				}
			},
			"universal:get_real_damage_6": {
				"run_command": {
					"command": ["damage @s 6 none @s"]
				}
			},
			"universal:get_real_damage_7": {
				"run_command": {
					"command": ["damage @s 7 none @s"]
				}
			},
			"universal:get_real_damage_8": {
				"run_command": {
					"command": ["damage @s 8 none @s"]
				}
			},
			"universal:get_real_damage_9": {
				"run_command": {
					"command": ["damage @s 9 none @s"]
				}
			},
			"universal:get_real_damage_10": {
				"run_command": {
					"command": ["damage @s 10 none @s"]
				}
			}
		}
	}
}
