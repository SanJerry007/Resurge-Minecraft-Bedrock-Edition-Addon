{
	"format_version": "1.17.20",
	"minecraft:entity": {
		"description": {
			"identifier": "minecraft:drowned",
			"is_spawnable": true,
			"is_summonable": true,
			"is_experimental": false,
			"scripts": {
				"animate": ["wet_detector", "moon_stage"]
			},
			"animations": {
				"wet_detector": "controller.animation.entity.normal.wet_detector",
				"moon_stage": "controller.animation.entity.normal.moon_stage"
			}
		},
		"component_groups": {
			"resurge:look_to_start_husk_transformation": {
				"minecraft:environment_sensor": {
					"triggers": [
						{
							"filters": {
								"test": "in_lava",
								"subject": "self",
								"value": true
							},
							"event": "resurge:start_transforming"
						},
						{
							"filters": {
								"test": "has_equipment",
								"subject": "self",
								"domain": "hand",
								"value": "resurge:thunder_trident"
							},
							"event": "resurge:degrade_trident"
						},
						{
							"filters": {
								"test": "has_equipment",
								"subject": "self",
								"domain": "hand",
								"value": "trident"
							},
							"event": "resurge:has_trident"
						}
					]
				}
			},
			"resurge:start_husk_transformation": {
				"minecraft:environment_sensor": {
					"triggers": [
						{
							"filters": {
								"test": "in_lava",
								"subject": "self",
								"value": false
							},
							"event": "resurge:stop_transforming"
						},
						{
							"filters": {
								"test": "has_equipment",
								"subject": "self",
								"domain": "hand",
								"value": "resurge:thunder_trident"
							},
							"event": "resurge:degrade_trident"
						},
						{
							"filters": {
								"test": "has_equipment",
								"subject": "self",
								"domain": "hand",
								"value": "trident"
							},
							"event": "resurge:has_trident"
						}
					]
				},
				"minecraft:timer": {
					"looping": false,
					"time": 30,
					"time_down_event": {
						"event": "resurge:convert_to_husk"
					}
				}
			},
			"resurge:convert_to_husk": {
				"minecraft:transformation": {
					"into": "minecraft:husk<minecraft:as_adult>",
					"transformation_sound": "block.campfire.crackle",
					"drop_equipment": false,
					"delay": {
						"value": 15
					}
				},
				"minecraft:is_shaking": {}
			},
			"resurge:convert_to_baby_husk": {
				"minecraft:transformation": {
					"into": "minecraft:husk<minecraft:as_baby>",
					"transformation_sound": "block.campfire.crackle",
					"drop_equipment": false,
					"delay": {
						"value": 15
					}
				},
				"minecraft:is_shaking": {}
			},
			"resurge:convert_to_baby_jockey_husk": {
				"minecraft:transformation": {
					"into": "minecraft:husk<resurge:as_baby_jockey>",
					"transformation_sound": "block.campfire.crackle",
					"drop_equipment": false,
					"delay": {
						"value": 15
					}
				},
				"minecraft:is_shaking": {}
			},

			"minecraft:baby_drowned": {
				"minecraft:experience_reward": {
					"on_death": "query.last_hit_by_player ? 14 + (query.equipment_count * Math.Random(1,6)) : Math.Random(0,1)"
				},
				"minecraft:is_baby": {},
				"minecraft:scale": {
					"value": 0.5
				},
				"minecraft:movement": {
					"value": 0.48
				},
				"minecraft:underwater_movement": {
					"value": 0.12
				}
			},
			"minecraft:adult_drowned": {
				"minecraft:experience_reward": {
					"on_death": "query.last_hit_by_player ? 7 + (query.equipment_count * Math.Random(1,3)) : Math.Random(0,1)"
				},
				"minecraft:movement": {
					"value": 0.32
				},
				"minecraft:underwater_movement": {
					"value": 0.08
				},
				"minecraft:rideable": {
					"seat_count": 1,
					"family_types": ["zombie"],
					"seats": {
						"position": [0.0, 1.1, -0.35],
						"lock_rider_rotation": 0
					}
				},
				"minecraft:behavior.mount_pathing": {
					"priority": 2,
					"speed_multiplier": 0.8,
					"target_dist": 0.0,
					"track_target": true
				}
			},
			"resurge:jockey_drowned": {
				"minecraft:behavior.find_mount": {
					"priority": 1,
					"within_radius": 16
				}
			},

			"minecraft:hunter_mode": {
				"minecraft:navigation.generic": {
					"is_amphibious": true,
					"can_path_over_water": false,
					"can_break_doors": true,
					"can_swim": true,
					"can_walk": true,
					"can_walk_in_lava": true,
					"can_breach": true,
					"avoid_sun": false
				}
			},
			"minecraft:wander_mode": {
				"minecraft:navigation.generic": {
					"is_amphibious": true,
					"can_path_over_water": false,
					"can_break_doors": true,
					"can_swim": false,
					"can_walk": true,
					"can_walk_in_lava": true,
					"can_breach": true,
					"avoid_sun": false
				}
			},

			"resurge:normal_mode_controller": {
				"minecraft:behavior.melee_attack": {
					"priority": 3,
					"speed_multiplier": 1.0,
					"track_target": true,
					"reach_multiplier": 2.0,
					"require_complete_path": false //务必改为false，否则造成极大卡顿
				},
				"minecraft:environment_sensor": {
					"triggers": [
						{
							"filters": {
								"test": "has_equipment",
								"subject": "self",
								"domain": "hand",
								"value": "resurge:thunder_trident"
							},
							"event": "resurge:degrade_trident"
						},
						{
							"filters": {
								"test": "has_equipment",
								"subject": "self",
								"domain": "hand",
								"value": "trident"
							},
							"event": "resurge:has_trident"
						}
					]
				}
			},
			"resurge:trident_mode_controller": {
				"minecraft:target_nearby_sensor": {
					"inside_range": 4.0,
					"outside_range": 8.0,
					"on_inside_range": {
						"event": "resurge:trident_melee",
						"target": "self"
					},
					"on_outside_range": {
						"event": "resurge:trident_ranged",
						"target": "self"
					}
				},
				"minecraft:environment_sensor": {
					"triggers": [
						//此处仍添加降级三叉戟的选项，以应对特殊情况(如使用命令替换手中物品为雷霆三叉戟)
						{
							"filters": {
								"test": "has_equipment",
								"subject": "self",
								"domain": "hand",
								"value": "resurge:thunder_trident"
							},
							"event": "resurge:degrade_trident"
						},
						{
							"filters": {
								"test": "has_equipment",
								"subject": "self",
								"domain": "hand",
								"operator": "!=",
								"value": "trident"
							},
							"event": "resurge:lost_trident"
						}
					]
				}
			},
			"resurge:trident_melee_mode": {
				"minecraft:behavior.melee_attack": {
					"priority": 3,
					"speed_multiplier": 1.0,
					"track_target": true,
					"reach_multiplier": 4.0,
					"require_complete_path": false //务必改为false，否则造成极大卡顿
				}
			},
			"resurge:trident_ranged_mode": {
				"minecraft:shooter": {
					"def": "minecraft:thrown_trident"
				},
				"minecraft:behavior.ranged_attack": {
					"priority": 3,
					"attack_interval_min": 4.0,
					"attack_interval_max": 6.0,
					"attack_radius": 32.0,
					"attack_radius_min": 6.0,
					"burst_shots": 2,
					"burst_interval": 0.6,
					"speed_multiplier": 1.0,
					"charge_charged_trigger": 0, //每个炮弹开始充能的间隔
					"charge_shoot_trigger": 0, //每个炮弹的充能时间
					"swing": true,
					"x_max_rotation": 60.0,
					"y_max_head_rotation": 60.0
				}
			},

			"resurge:dry_property": {
				"minecraft:attack": {
					"damage": 5
				}
			},
			"resurge:dry_movement_baby": {
				"minecraft:movement": {
					"value": 0.408
				},
				"minecraft:underwater_movement": {
					"value": 0.102
				}
			},
			"resurge:dry_movement_adult": {
				"minecraft:movement": {
					"value": 0.272
				},
				"minecraft:underwater_movement": {
					"value": 0.068
				}
			},
			"resurge:wet_property": {
				"minecraft:attack": {
					"damage": 6,
					"effect_name": "mining_fatigue",
					"effect_duration": 30
				},
				"minecraft:knockback_resistance": {
					"value": 0.16
				}
			},
			"resurge:wet_movement_baby": {
				"minecraft:movement": {
					"value": 0.48
				},
				"minecraft:underwater_movement": {
					"value": 0.12
				}
			},
			"resurge:wet_movement_adult": {
				"minecraft:movement": {
					"value": 0.32
				},
				"minecraft:underwater_movement": {
					"value": 0.08
				}
			},

			"resurge:damage_stage0": {
				"minecraft:damage_sensor": {
					"triggers": [
						{
							"on_damage": {
								"filters": {
									"test": "in_water_or_rain",
									"subject": "self",
									"value": true
								}
							},
							"damage_multiplier": 0.84
						},
						{
							"damage_multiplier": 0.92
						}
					]
				}
			},
			"resurge:damage_stage1": {
				"minecraft:damage_sensor": {
					"triggers": [
						{
							"on_damage": {
								"filters": {
									"all_of": [
										{
											"test": "has_damage",
											"subject": "self",
											"value": "fatal"
										},
										{
											"test": "random_chance",
											"value": 32
										},
										{
											"test": "is_mark_variant",
											"subject": "self",
											"value": 0
										}
									]
								},
								"event": "resurge:random_select_rage",
								"target": "self"
							},
							"damage_modifier": -10000 //此处使用减法将伤害降至0，以正常显示受伤动画
						},
						{
							"on_damage": {
								"filters": {
									"test": "in_water_or_rain",
									"subject": "self",
									"value": true
								}
							},
							"damage_multiplier": 0.84
						},
						{
							"damage_multiplier": 0.92
						}
					]
				}
			},
			"resurge:damage_stage2": {
				"minecraft:damage_sensor": {
					"triggers": [
						{
							"on_damage": {
								"filters": {
									"all_of": [
										{
											"test": "has_damage",
											"subject": "self",
											"value": "fatal"
										},
										{
											"test": "random_chance",
											"value": 16
										},
										{
											"test": "is_mark_variant",
											"subject": "self",
											"value": 0
										}
									]
								},
								"event": "resurge:random_select_rage",
								"target": "self"
							},
							"damage_modifier": -10000 //此处使用减法将伤害降至0，以正常显示受伤动画
						},
						{
							"on_damage": {
								"filters": {
									"test": "in_water_or_rain",
									"subject": "self",
									"value": true
								}
							},
							"damage_multiplier": 0.84
						},
						{
							"damage_multiplier": 0.92
						}
					]
				}
			},
			"resurge:damage_stage3": {
				"minecraft:damage_sensor": {
					"triggers": [
						{
							"on_damage": {
								"filters": {
									"all_of": [
										{
											"test": "has_damage",
											"subject": "self",
											"value": "fatal"
										},
										{
											"test": "random_chance",
											"value": 8
										},
										{
											"test": "is_mark_variant",
											"subject": "self",
											"value": 0
										}
									]
								},
								"event": "resurge:random_select_rage",
								"target": "self"
							},
							"damage_modifier": -10000 //此处使用减法将伤害降至0，以正常显示受伤动画
						},
						{
							"on_damage": {
								"filters": {
									"test": "in_water_or_rain",
									"subject": "self",
									"value": true
								}
							},
							"damage_multiplier": 0.84
						},
						{
							"damage_multiplier": 0.92
						}
					]
				}
			},
			"resurge:damage_stage4": {
				"minecraft:damage_sensor": {
					"triggers": [
						{
							"on_damage": {
								"filters": {
									"all_of": [
										{
											"test": "has_damage",
											"subject": "self",
											"value": "fatal"
										},
										{
											"test": "random_chance",
											"value": 4
										},
										{
											"test": "is_mark_variant",
											"subject": "self",
											"value": 0
										}
									]
								},
								"event": "resurge:random_select_rage",
								"target": "self"
							},
							"damage_modifier": -10000 //此处使用减法将伤害降至0，以正常显示受伤动画
						},
						{
							"on_damage": {
								"filters": {
									"test": "in_water_or_rain",
									"subject": "self",
									"value": true
								}
							},
							"damage_multiplier": 0.84
						},
						{
							"damage_multiplier": 0.92
						}
					]
				}
			},

			"resurge:send_event": {
				"minecraft:mark_variant": {
					"value": 1 //标识逝者不休状态
				},
				"minecraft:damage_over_time": {
					"damage_per_hurt": 2,
					"time_between_hurt": 0.5
				},
				"minecraft:behavior.send_event": {
					"priority": 0,
					"event_choices": [
						{
							"min_activation_range": 0.0,
							"max_activation_range": 32.0,
							"cooldown_time": 0.0,
							"cast_duration": 0.2,
							"look_at_target": true,
							"weight": 233,
							"particle_color": "#FFFF0000",
							"start_sound_event": "ambient",
							"filters": {
								"all_of": [
									{
										"test": "is_family",
										"subject": "other",
										"value": "zombie"
									},
									{
										"test": "is_family",
										"subject": "other",
										"operator": "!=",
										"value": "raged"
									}
								]
							},
							"sequence": [
								{
									"event": "resurge:random_rage",
									"sound_event": "ambient"
								}
							]
						}
					]
				}
			},

			"resurge:adult_rage": {
				"minecraft:transformation": {
					"into": "resurge:drowned_raged<resurge:as_adult>",
					"preserve_equipment": true
				}
			},
			"resurge:baby_rage": {
				"minecraft:transformation": {
					"into": "resurge:drowned_raged<resurge:as_baby>",
					"preserve_equipment": true
				}
			},
			"resurge:baby_jockey_rage": {
				"minecraft:transformation": {
					"into": "resurge:drowned_raged<resurge:as_baby_jockey>",
					"preserve_equipment": true
				}
			},

			"resurge:moon_rage_timer": {
				"minecraft:timer": {
					"looping": false,
					"time": [0, 30],
					"time_down_event": {
						"event": "resurge:moon_rage"
					}
				},
				"minecraft:is_shaking": {}
			},

			"resurge:adult_moon_rage": {
				"minecraft:transformation": {
					"into": "resurge:drowned_raged<resurge:as_adult_moon>",
					"preserve_equipment": true
				}
			},
			"resurge:baby_moon_rage": {
				"minecraft:transformation": {
					"into": "resurge:drowned_raged<resurge:as_baby_moon>",
					"preserve_equipment": true
				}
			},
			"resurge:baby_jockey_moon_rage": {
				"minecraft:transformation": {
					"into": "resurge:drowned_raged<resurge:as_baby_jockey_moon>",
					"preserve_equipment": true
				}
			}
		},

		"components": {
			"minecraft:is_hidden_when_invisible": {},
			"minecraft:nameable": {},

			"minecraft:type_family": {
				"family": ["drowned", "zombie", "undead", "monster", "mob"]
			},
			"minecraft:mark_variant": {
				"value": 0 //标识普通状态
			},
			"minecraft:equip_item": {},
			"minecraft:collision_box": {
				"width": 0.6,
				"height": 1.9
			},
			"minecraft:break_blocks": {
				"breakable_blocks": [
					"web",
					"cactus",
					"bamboo",
					"sweet_berry_bush",
					"powder_snow"
				]
			},
			"minecraft:loot": {
				"table": "loot_tables/entities/drowned.json"
			},
			"minecraft:equipment": {
				"table": "loot_tables/entities/drowned_equipment.json",
				"slot_drop_chance": [
					{
						"slot": "slot.weapon.mainhand",
						"drop_chance": 0.025
					},
					{
						"slot": "slot.weapon.offhand",
						"drop_chance": 0.35
					}
				]
			},

			"minecraft:annotation.break_door": {
				"break_time": 3
			},
			"minecraft:jump.static": {},
			"minecraft:can_climb": {},
			"minecraft:health": {
				"value": 44,
				"max": 44
			},
			"minecraft:attack": {
				"damage": 5
			},
			"minecraft:fire_immune": {},

			"minecraft:breathable": {
				"total_supply": 15,
				"suffocate_time": 0,
				"breathes_air": true,
				"breathes_water": true
			},
			"minecraft:movement.generic": {
				"max_turn": 60.0
			},
			"minecraft:navigation.generic": {
				"is_amphibious": true,
				"can_path_over_water": false,
				"can_break_doors": true,
				"can_swim": false,
				"can_walk": true,
				"can_walk_in_lava": true,
				"can_breach": true,
				"avoid_sun": false
			},
			"minecraft:preferred_path": {
				"max_fall_blocks": 20
			},
			"minecraft:shareables": {
				"items": [
					{
						"item": "resurge:thunder_trident",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 0
					},
					{
						"item": "minecraft:trident",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 0
					},
					{
						"item": "minecraft:nautilus_shell",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 0
					},

					{
						"item": "minecraft:netherite_sword",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 2
					},
					{
						"item": "minecraft:diamond_sword",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 3
					},
					{
						"item": "minecraft:iron_sword",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 4
					},
					{
						"item": "minecraft:stone_sword",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 5
					},
					{
						"item": "minecraft:golden_sword",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 6
					},
					{
						"item": "minecraft:wooden_sword",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 7
					},
					{
						"item": "minecraft:netherite_helmet",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 0
					},
					{
						"item": "minecraft:diamond_helmet",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 1
					},
					{
						"item": "minecraft:iron_helmet",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 2
					},
					{
						"item": "minecraft:chainmail_helmet",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 3
					},
					{
						"item": "minecraft:golden_helmet",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 4
					},
					{
						"item": "minecraft:leather_helmet",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 5
					},
					{
						"item": "minecraft:turtle_helmet",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 6
					},
					{
						"item": "minecraft:skull:0",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 7
					},
					{
						"item": "minecraft:skull:1",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 7
					},
					{
						"item": "minecraft:carved_pumpkin",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 7
					},
					{
						"item": "minecraft:netherite_chestplate",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 0
					},
					{
						"item": "minecraft:diamond_chestplate",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 1
					},
					{
						"item": "minecraft:iron_chestplate",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 2
					},
					{
						"item": "minecraft:chainmail_chestplate",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 3
					},
					{
						"item": "minecraft:golden_chestplate",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 4
					},
					{
						"item": "minecraft:leather_chestplate",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 5
					},
					{
						"item": "minecraft:netherite_leggings",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 0
					},
					{
						"item": "minecraft:diamond_leggings",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 1
					},
					{
						"item": "minecraft:iron_leggings",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 2
					},
					{
						"item": "minecraft:chainmail_leggings",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 3
					},
					{
						"item": "minecraft:golden_leggings",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 4
					},
					{
						"item": "minecraft:leather_leggings",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 5
					},
					{
						"item": "minecraft:netherite_boots",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 0
					},
					{
						"item": "minecraft:diamond_boots",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 1
					},
					{
						"item": "minecraft:iron_boots",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 2
					},
					{
						"item": "minecraft:chainmail_boots",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 3
					},
					{
						"item": "minecraft:golden_boots",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 4
					},
					{
						"item": "minecraft:leather_boots",
						"want_amount": 1,
						"surplus_amount": 1,
						"priority": 5
					}
				]
			},
			"minecraft:despawn": {
				"despawn_from_distance": {}
			},

			"minecraft:follow_range": {
				"value": 48,
				"max": 48
			},

			"minecraft:behavior.equip_item": {
				"priority": 2
			},
			"minecraft:behavior.melee_attack": {
				"priority": 3,
				"speed_multiplier": 1.0,
				"track_target": true,
				"reach_multiplier": 2.0,
				"require_complete_path": false //务必改为false，否则造成极大卡顿
			},
			"minecraft:behavior.stomp_turtle_egg": {
				"priority": 4,
				"speed_multiplier": 1,
				"search_range": 10,
				"search_height": 2,
				"goal_radius": 1.14,
				"interval": 20
			},
			"minecraft:behavior.random_breach": {
				"priority": 5,
				"interval": 20,
				"xz_dist": 4,
				"y_dist": 8,
				"cooldown_time": 1
			},
			"minecraft:behavior.pickup_items": {
				"priority": 6,
				"max_dist": 6,
				"goal_radius": 3,
				"speed_multiplier": 1.0,
				"pickup_based_on_chance": true,
				"can_pickup_any_item": true,
				"excluded_items": [
					"minecraft:glow_ink_sac",
					"minecraft:string",
					"minecraft:cactus",
					"minecraft:bamboo",
					"minecraft:sweet_berries",
					"minecraft:pointed_dripstone"
				]
			},
			"minecraft:behavior.random_stroll": {
				"priority": 7,
				"speed_multiplier": 1
			},
			"minecraft:behavior.look_at_player": {
				"priority": 8,
				"look_distance": 6,
				"probability": 0.02
			},
			"minecraft:behavior.random_look_around": {
				"priority": 9
			},
			"minecraft:behavior.hurt_by_target": {
				"priority": 1,
				"alert_same_type": true,
				"entity_types": [
					{
						"filters": {
							"all_of": [
								{
									"test": "is_family",
									"subject": "other",
									"operator": "!=",
									"value": "zombie"
								},
								{
									"test": "is_family",
									"subject": "other",
									"operator": "!=",
									"value": "witch"
								}
							]
						}
					}
				]
			},
			"minecraft:behavior.nearest_attackable_target": {
				"priority": 2,
				"must_reach": false,
				"must_see": false, //因filter内部进行了定义，此处实际无效
				"must_see_forget_duration": 20.0,
				"persist_time": 3,
				"reselect_targets": true,
				"within_radius": 48.0, //因定义了follow_range，此处实际无效
				"entity_types": [
					{
						"filters": {
							"any_of": [
								{
									"test": "is_family",
									"subject": "other",
									"value": "player"
								},
								{
									"all_of": [
										{
											"test": "is_family",
											"subject": "other",
											"value": "human"
										},
										{
											"test": "is_family",
											"subject": "other",
											"operator": "!=",
											"value": "witch"
										}
									]
								}
							]
						},
						"max_dist": 32,
						"must_see": false
					},
					{
						"filters": {
							"all_of": [
								{
									"test": "is_family",
									"subject": "other",
									"value": "friend"
								},
								{
									"any_of": [
										{
											"test": "in_water_or_rain",
											"subject": "other",
											"value": true
										},
										{
											"test": "is_daytime",
											"value": false
										}
									]
								}
							]
						},
						"max_dist": 32,
						"must_see": false
					},
					{
						"filters": {
							"any_of": [
								{
									"test": "is_family",
									"subject": "other",
									"value": "allay"
								},
								{
									"test": "is_family",
									"subject": "other",
									"value": "bee"
								},
								{
									"test": "is_family",
									"subject": "other",
									"value": "turtle"
								},
								{
									"test": "is_family",
									"subject": "other",
									"value": "axolotl"
								},
								{
									"test": "is_family",
									"subject": "other",
									"value": "dolphin"
								}
							]
						},
						"max_dist": 32,
						"must_see": true
					}
				]
			},
			"minecraft:physics": {},
			"minecraft:pushable": {
				"is_pushable": true,
				"is_pushable_by_piston": true
			},
			"minecraft:environment_sensor": {
				"triggers": [
					{
						"filters": {
							"test": "in_lava",
							"subject": "self",
							"value": true
						},
						"event": "resurge:start_transforming"
					},
					{
						"filters": {
							"test": "has_equipment",
							"subject": "self",
							"domain": "hand",
							"value": "resurge:thunder_trident"
						},
						"event": "resurge:degrade_trident"
					},
					{
						"filters": {
							"test": "has_equipment",
							"subject": "self",
							"domain": "hand",
							"value": "trident"
						},
						"event": "resurge:has_trident"
					}
				]
			},
			"minecraft:on_target_acquired": {
				"event": "minecraft:has_target",
				"target": "self"
			},
			"minecraft:on_target_escape": {
				"event": "minecraft:lost_target",
				"target": "self"
			},
			"minecraft:conditional_bandwidth_optimization": {}
		},

		"events": {
			"minecraft:entity_spawned": {
				"randomize": [
					{
						"weight": 940,
						"remove": {},
						"add": {
							"component_groups": ["minecraft:adult_drowned"]
						}
					},
					{
						"weight": 50,
						"remove": {},
						"add": {
							"component_groups": ["minecraft:baby_drowned"]
						}
					},

					{
						"weight": 10,
						"remove": {},
						"add": {
							"component_groups": [
								"minecraft:baby_drowned",
								"resurge:jockey_drowned"
							]
						}
					}
				]
			},
			"minecraft:as_adult": {
				"add": {
					"component_groups": ["minecraft:adult_drowned"]
				}
			},
			"minecraft:as_baby": {
				"add": {
					"component_groups": ["minecraft:baby_drowned"]
				}
			},
			"resurge:as_baby_jockey": {
				"add": {
					"component_groups": ["minecraft:baby_drowned", "resurge:jockey_drowned"]
				}
			},

			"resurge:start_transforming": {
				"sequence": [
					{
						"filters": {
							"test": "has_component",
							"operator": "!=",
							"value": "minecraft:timer"
						},
						"add": {
							"component_groups": ["resurge:start_husk_transformation"]
						},
						"remove": {
							"component_groups": ["resurge:look_to_start_husk_transformation"]
						}
					}
				]
			},
			"resurge:stop_transforming": {
				"add": {
					"component_groups": ["resurge:look_to_start_husk_transformation"]
				},
				"remove": {
					"component_groups": ["resurge:start_husk_transformation"]
				}
			},
			"resurge:convert_to_husk": {
				"sequence": [
					{
						"filters": {
							"test": "has_component",
							"operator": "!=",
							"value": "minecraft:is_baby"
						},
						"add": {
							"component_groups": ["resurge:convert_to_husk"]
						},
						"remove": {
							"component_groups": ["resurge:start_husk_transformation"]
						}
					},
					{
						"filters": {
							"test": "has_component",
							"value": "minecraft:is_baby"
						},
						"sequence": [
							{
								"filters": {
									"test": "has_component",
									"operator": "!=",
									"value": "minecraft:behavior.find_mount"
								},
								"add": {
									"component_groups": ["resurge:convert_to_baby_husk"]
								}
							},
							{
								"filters": {
									"test": "has_component",
									"value": "minecraft:behavior.find_mount"
								},
								"add": {
									"component_groups": ["resurge:convert_to_baby_jockey_husk"]
								}
							}
						],
						"remove": {
							"component_groups": ["resurge:start_husk_transformation"]
						}
					}
				]
			},

			"resurge:as_adult_trident": {
				"add": {
					"component_groups": ["minecraft:adult_drowned"]
				},
				"run_command": {
					"command": [
						"replaceitem entity @s slot.weapon.mainhand 0 destroy trident 1 0"
					]
				}
			},
			"resurge:as_baby_trident": {
				"add": {
					"component_groups": ["minecraft:baby_drowned"]
				},
				"run_command": {
					"command": [
						"replaceitem entity @s slot.weapon.mainhand 0 destroy trident 1 0"
					]
				}
			},
			"resurge:as_baby_jockey_trident": {
				"add": {
					"component_groups": ["minecraft:baby_drowned", "resurge:jockey_drowned"]
				},
				"run_command": {
					"command": [
						"replaceitem entity @s slot.weapon.mainhand 0 destroy trident 1 0"
					]
				}
			},

			"minecraft:has_target": {
				"remove": {
					"component_groups": ["minecraft:wander_mode"]
				},
				"add": {
					"component_groups": ["minecraft:hunter_mode"]
				}
			},
			"minecraft:lost_target": {
				"remove": {
					"component_groups": ["minecraft:hunter_mode"]
				},
				"add": {
					"component_groups": ["minecraft:wander_mode"]
				}
			},

			"resurge:degrade_trident": {
				"run_command": {
					"command": [
						"replaceitem entity @s slot.weapon.mainhand 0 destroy trident 1 0",
						"particle minecraft:cauldron_explosion_emitter ~~1~",
						"particle minecraft:cauldron_explosion_emitter ~~1~",
						"particle minecraft:cauldron_explosion_emitter ~~1~"
					]
				}
			},

			"resurge:has_trident": {
				"add": {
					"component_groups": ["resurge:trident_mode_controller"]
				},
				"remove": {
					"component_groups": ["resurge:normal_mode_controller"]
				}
			},
			"resurge:lost_trident": {
				"add": {
					"component_groups": ["resurge:normal_mode_controller"]
				},
				"remove": {
					"component_groups": [
						"resurge:trident_mode_controller",
						"resurge:trident_melee_mode",
						"resurge:trident_ranged_mode"
					]
				}
			},

			"resurge:trident_melee": {
				"add": {
					"component_groups": ["resurge:trident_melee_mode"]
				},
				"remove": {
					"component_groups": ["resurge:trident_ranged_mode"]
				}
			},
			"resurge:trident_ranged": {
				"add": {
					"component_groups": ["resurge:trident_ranged_mode"]
				},
				"remove": {
					"component_groups": ["resurge:trident_melee_mode"]
				}
			},

			"resurge:become_dry": {
				"sequence": [
					{
						"add": {
							"component_groups": ["resurge:dry_property"]
						},
						"remove": {
							"component_groups": ["resurge:wet_property"]
						}
					},
					{
						"filters": {
							"test": "has_component",
							"operator": "!=",
							"value": "minecraft:is_baby"
						},
						"add": {
							"component_groups": ["resurge:dry_movement_adult"]
						},
						"remove": {
							"component_groups": ["resurge:wet_movement_adult"]
						}
					},
					{
						"filters": {
							"test": "has_component",
							"operator": "==",
							"value": "minecraft:is_baby"
						},
						"add": {
							"component_groups": ["resurge:dry_movement_baby"]
						},
						"remove": {
							"component_groups": ["resurge:wet_movement_baby"]
						}
					}
				]
			},
			"resurge:become_wet": {
				"sequence": [
					{
						"add": {
							"component_groups": ["resurge:wet_property"]
						},
						"remove": {
							"component_groups": ["resurge:dry_property"]
						}
					},
					{
						"filters": {
							"test": "has_component",
							"operator": "!=",
							"value": "minecraft:is_baby"
						},
						"add": {
							"component_groups": ["resurge:wet_movement_adult"]
						},
						"remove": {
							"component_groups": ["resurge:dry_movement_adult"]
						}
					},
					{
						"filters": {
							"test": "has_component",
							"operator": "==",
							"value": "minecraft:is_baby"
						},
						"add": {
							"component_groups": ["resurge:wet_movement_baby"]
						},
						"remove": {
							"component_groups": ["resurge:dry_movement_baby"]
						}
					}
				]
			},

			"resurge:moon_stage0": {
				"add": {
					"component_groups": ["resurge:damage_stage0"]
				},
				"remove": {
					"component_groups": [
						"resurge:damage_stage1",
						"resurge:damage_stage2",
						"resurge:damage_stage3",
						"resurge:damage_stage4",
						"resurge:moon_rage_timer"
					]
				}
			},
			"resurge:moon_stage1": {
				"add": {
					"component_groups": ["resurge:damage_stage1"]
				},
				"remove": {
					"component_groups": [
						"resurge:damage_stage0",
						"resurge:damage_stage2",
						"resurge:damage_stage3",
						"resurge:damage_stage4",
						"resurge:moon_rage_timer"
					]
				}
			},
			"resurge:moon_stage2": {
				"add": {
					"component_groups": ["resurge:damage_stage2"]
				},
				"remove": {
					"component_groups": [
						"resurge:damage_stage0",
						"resurge:damage_stage1",
						"resurge:damage_stage3",
						"resurge:damage_stage4",
						"resurge:moon_rage_timer"
					]
				}
			},
			"resurge:moon_stage3": {
				"add": {
					"component_groups": ["resurge:damage_stage3"]
				},
				"remove": {
					"component_groups": [
						"resurge:damage_stage0",
						"resurge:damage_stage1",
						"resurge:damage_stage2",
						"resurge:damage_stage4",
						"resurge:moon_rage_timer"
					]
				}
			},
			"resurge:moon_stage4_day": {
				"add": {
					"component_groups": ["resurge:damage_stage4"]
				},
				"remove": {
					"component_groups": [
						"resurge:damage_stage0",
						"resurge:damage_stage1",
						"resurge:damage_stage2",
						"resurge:damage_stage3",
						"resurge:moon_rage_timer"
					]
				}
			},
			"resurge:moon_stage4_night": {
				"sequence": [
					{
						//此处主动关闭尸壳转换，以避免出现尸壳转换timer被覆盖，无法恢复的情况
						"add": {
							"component_groups": ["resurge:look_to_start_husk_transformation"]
						},
						"remove": {
							"component_groups": ["resurge:start_husk_transformation"]
						}
					},
					{
						"add": {
							"component_groups": [
								"resurge:damage_stage4",
								"resurge:moon_rage_timer"
							]
						},
						"remove": {
							"component_groups": [
								"resurge:damage_stage0",
								"resurge:damage_stage1",
								"resurge:damage_stage2",
								"resurge:damage_stage3"
							]
						}
					}
				]
			},

			"resurge:random_select_rage": {
				"randomize": [
					{
						"weight": 60,
						"sequence": [
							{
								"filters": {
									"test": "has_component",
									"operator": "!=",
									"value": "minecraft:is_baby"
								},
								"add": {
									"component_groups": ["resurge:adult_rage"]
								}
							},
							{
								"filters": {
									"test": "has_component",
									"value": "minecraft:is_baby"
								},
								"sequence": [
									{
										"filters": {
											"test": "has_component",
											"operator": "!=",
											"value": "minecraft:behavior.find_mount"
										},
										"add": {
											"component_groups": ["resurge:baby_rage"]
										}
									},
									{
										"filters": {
											"test": "has_component",
											"value": "minecraft:behavior.find_mount"
										},
										"add": {
											"component_groups": ["resurge:baby_jockey_rage"]
										}
									}
								]
							}
						]
					},
					{
						"weight": 40,
						"add": {
							"component_groups": ["resurge:send_event"]
						},
						"run_command": {
							"command": [
								"effect @s resistance 600 3 false",
								"effect @s weakness 600 1 false",
								"effect @s slowness 600 1 false"
							]
						}
					}
				]
			},
			"resurge:random_rage": {
				"randomize": [
					{
						"weight": 75
					},
					{
						"weight": 25,
						"sequence": [
							{
								"filters": {
									"test": "has_component",
									"operator": "!=",
									"value": "minecraft:is_baby"
								},
								"add": {
									"component_groups": ["resurge:adult_rage"]
								}
							},
							{
								"filters": {
									"test": "has_component",
									"value": "minecraft:is_baby"
								},
								"sequence": [
									{
										"filters": {
											"test": "has_component",
											"operator": "!=",
											"value": "minecraft:behavior.find_mount"
										},
										"add": {
											"component_groups": ["resurge:baby_rage"]
										}
									},
									{
										"filters": {
											"test": "has_component",
											"value": "minecraft:behavior.find_mount"
										},
										"add": {
											"component_groups": ["resurge:baby_jockey_rage"]
										}
									}
								]
							}
						]
					}
				]
			},
			"resurge:rage": {
				"sequence": [
					{
						"filters": {
							"test": "has_component",
							"operator": "!=",
							"value": "minecraft:is_baby"
						},
						"add": {
							"component_groups": ["resurge:adult_rage"]
						}
					},
					{
						"filters": {
							"test": "has_component",
							"value": "minecraft:is_baby"
						},
						"sequence": [
							{
								"filters": {
									"test": "has_component",
									"operator": "!=",
									"value": "minecraft:behavior.find_mount"
								},
								"add": {
									"component_groups": ["resurge:baby_rage"]
								}
							},
							{
								"filters": {
									"test": "has_component",
									"value": "minecraft:behavior.find_mount"
								},
								"add": {
									"component_groups": ["resurge:baby_jockey_rage"]
								}
							}
						]
					}
				]
			},
			"resurge:moon_rage": {
				"sequence": [
					{
						"filters": {
							"test": "has_component",
							"operator": "!=",
							"value": "minecraft:is_baby"
						},
						"add": {
							"component_groups": ["resurge:adult_moon_rage"]
						}
					},
					{
						"filters": {
							"test": "has_component",
							"value": "minecraft:is_baby"
						},
						"sequence": [
							{
								"filters": {
									"test": "has_component",
									"operator": "!=",
									"value": "minecraft:behavior.find_mount"
								},
								"add": {
									"component_groups": ["resurge:baby_moon_rage"]
								}
							},
							{
								"filters": {
									"test": "has_component",
									"value": "minecraft:behavior.find_mount"
								},
								"add": {
									"component_groups": ["resurge:baby_jockey_moon_rage"]
								}
							}
						]
					}
				]
			},

			"universal:lightning_bolt_attack": {
				"run_command": {
					"command": ["summon lightning_bolt"]
				}
			},

			"universal:get_real_damage_1": {
				"run_command": {
					"command": ["damage @s 1 none @s"]
				}
			},
			"universal:get_real_damage_2": {
				"run_command": {
					"command": ["damage @s 2 none @s"]
				}
			},
			"universal:get_real_damage_3": {
				"run_command": {
					"command": ["damage @s 3 none @s"]
				}
			},
			"universal:get_real_damage_4": {
				"run_command": {
					"command": ["damage @s 4 none @s"]
				}
			},
			"universal:get_real_damage_5": {
				"run_command": {
					"command": ["damage @s 5 none @s"]
				}
			},
			"universal:get_real_damage_6": {
				"run_command": {
					"command": ["damage @s 6 none @s"]
				}
			},
			"universal:get_real_damage_7": {
				"run_command": {
					"command": ["damage @s 7 none @s"]
				}
			},
			"universal:get_real_damage_8": {
				"run_command": {
					"command": ["damage @s 8 none @s"]
				}
			},
			"universal:get_real_damage_9": {
				"run_command": {
					"command": ["damage @s 9 none @s"]
				}
			},
			"universal:get_real_damage_10": {
				"run_command": {
					"command": ["damage @s 10 none @s"]
				}
			}
		}
	}
}
